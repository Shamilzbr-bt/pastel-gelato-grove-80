
<section class="relative h-screen w-full overflow-hidden">
  {%- for block in section.blocks -%}
    {% if block.type == 'slide' %}
      <div
        class="absolute inset-0 transition-opacity duration-1000 ease-in-out opacity-0 js-slide"
        style="background-image: linear-gradient(to right, rgba(255, 245, 225, 0.7), rgba(255, 209, 220, 0.7)), url({{ block.settings.image | img_url: 'master' }});
              background-size: cover;
              background-position: center"
        data-slide-index="{{ forloop.index0 }}"
      ></div>
    {% endif %}
  {%- endfor -%}
  
  <!-- Content -->
  <div class="absolute inset-0 flex flex-col items-center justify-center px-4 sm:px-6 lg:px-8">
    <div class="max-w-4xl mx-auto text-center">
      {%- for block in section.blocks -%}
        {% if block.type == 'slide' %}
          <div class="js-slide-content opacity-0" data-slide-index="{{ forloop.index0 }}">
            <p class="inline-block px-4 py-1 mb-4 rounded-full bg-white/50 backdrop-blur-sm text-gelatico-pink text-sm font-medium uppercase tracking-wider">
              {{ block.settings.subheading }}
            </p>
            
            <h1 class="text-5xl sm:text-6xl md:text-7xl font-bold text-foreground font-gelatico mb-6">
              {{ block.settings.heading }}
            </h1>
            
            <p class="text-lg md:text-xl text-foreground/80 mb-8 max-w-2xl mx-auto">
              {{ block.settings.description }}
            </p>
          </div>
        {% endif %}
      {%- endfor -%}
      
      <div class="flex flex-col sm:flex-row items-center justify-center space-y-4 sm:space-y-0 sm:space-x-4">
        <a href="{{ section.settings.button_link }}" class="gelatico-button">
          {{ section.settings.button_label }}
        </a>
        <a href="{{ section.settings.button_secondary_link }}" class="gelatico-button-outline">
          {{ section.settings.button_secondary_label }}
        </a>
      </div>
    </div>
    
    <!-- Slide Indicators -->
    <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 flex space-x-2 js-slide-indicators">
      {%- for block in section.blocks -%}
        {% if block.type == 'slide' %}
          <button
            class="w-2.5 h-2.5 rounded-full transition-all duration-300 bg-white/70 hover:bg-white js-slide-indicator"
            data-slide-index="{{ forloop.index0 }}"
            aria-label="Go to slide {{ forloop.index }}"
          ></button>
        {% endif %}
      {%- endfor -%}
    </div>
  </div>
  
  <!-- Decorative elements -->
  <div class="absolute bottom-[5%] left-[5%] w-20 h-20 rounded-full bg-gelatico-pink bg-opacity-10 animate-float"></div>
  <div class="absolute top-[15%] right-[10%] w-16 h-16 rounded-full bg-gelatico-soft-blue bg-opacity-20 animate-pulse-soft"></div>
  <div class="absolute top-[30%] left-[8%] w-12 h-12 rounded-full bg-gelatico-baby-pink bg-opacity-30 animate-rotate-slow"></div>
</section>

{% schema %}
{
  "name": "Hero Slider",
  "tag": "section",
  "class": "hero-slider-section",
  "settings": [
    {
      "type": "text",
      "id": "button_label",
      "label": "Button label",
      "default": "Shop Now"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button link",
      "default": "/collections/all"
    },
    {
      "type": "text",
      "id": "button_secondary_label",
      "label": "Secondary button label",
      "default": "Explore Flavors"
    },
    {
      "type": "url",
      "id": "button_secondary_link",
      "label": "Secondary button link",
      "default": "/collections/flavors"
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "limit": 5,
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Background Image"
        },
        {
          "type": "text",
          "id": "subheading",
          "label": "Subheading",
          "default": "Handcrafted with Love"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "Artisanal Gelato"
        },
        {
          "type": "textarea",
          "id": "description",
          "label": "Description",
          "default": "Experience the authentic taste of Italy with our premium, small-batch gelato made from the finest ingredients."
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Hero Slider",
      "blocks": [
        {
          "type": "slide"
        },
        {
          "type": "slide"
        },
        {
          "type": "slide"
        }
      ]
    }
  ]
}
{% endschema %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const slides = document.querySelectorAll('.js-slide');
    const slideContents = document.querySelectorAll('.js-slide-content');
    const indicators = document.querySelectorAll('.js-slide-indicator');
    let currentSlide = 0;
    let slideInterval;
    
    // Function to show a specific slide
    function showSlide(index) {
      // Hide all slides
      slides.forEach(slide => {
        slide.classList.remove('opacity-100');
        slide.classList.add('opacity-0');
      });
      
      // Hide all slide content
      slideContents.forEach(content => {
        content.classList.remove('opacity-100');
        content.classList.add('opacity-0');
      });
      
      // Update indicators
      indicators.forEach(indicator => {
        indicator.classList.remove('bg-gelatico-pink', 'w-8');
        indicator.classList.add('bg-white/70');
      });
      
      // Show the selected slide
      slides[index].classList.add('opacity-100');
      slides[index].classList.remove('opacity-0');
      
      // Show the selected slide content with animation
      slideContents[index].classList.add('opacity-100');
      slideContents[index].classList.remove('opacity-0');
      
      // Update the indicator
      indicators[index].classList.add('bg-gelatico-pink', 'w-8');
      indicators[index].classList.remove('bg-white/70');
      
      // Update current slide index
      currentSlide = index;
    }
    
    // Initialize the first slide
    if (slides.length > 0) {
      showSlide(0);
    }
    
    // Start the automatic slideshow
    function startSlideshow() {
      slideInterval = setInterval(() => {
        let nextSlide = (currentSlide + 1) % slides.length;
        showSlide(nextSlide);
      }, 5000);
    }
    
    // Set up click handlers for the indicators
    indicators.forEach((indicator, index) => {
      indicator.addEventListener('click', () => {
        clearInterval(slideInterval);
        showSlide(index);
        startSlideshow();
      });
    });
    
    // Start the slideshow
    startSlideshow();
  });
</script>
